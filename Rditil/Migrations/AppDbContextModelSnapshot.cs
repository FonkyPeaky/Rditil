// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rditil.Data;

#nullable disable

namespace Rditil.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rditil.Models.Examen", b =>
                {
                    b.Property<int>("Id_Examen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Examen"));

                    b.Property<DateTime>("DateExamen")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan>("DureeExamen")
                        .HasColumnType("interval");

                    b.Property<int>("Id_Utilisateur")
                        .HasColumnType("integer");

                    b.Property<int>("SCORE")
                        .HasColumnType("integer");

                    b.Property<int>("UtilisateurId_Utilisateur")
                        .HasColumnType("integer");

                    b.HasKey("Id_Examen");

                    b.HasIndex("UtilisateurId_Utilisateur");

                    b.ToTable("Examens");
                });

            modelBuilder.Entity("Rditil.Models.Examen_Question", b =>
                {
                    b.Property<int>("Id_Examen")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Question")
                        .HasColumnType("integer");

                    b.Property<int?>("ExamenId_Examen")
                        .HasColumnType("integer");

                    b.HasKey("Id_Examen", "Id_Question");

                    b.HasIndex("ExamenId_Examen");

                    b.HasIndex("Id_Question");

                    b.ToTable("ExamenQuestions");
                });

            modelBuilder.Entity("Rditil.Models.Question", b =>
                {
                    b.Property<int>("Id_Question")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Question"));

                    b.Property<string>("Enonce")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Question");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Rditil.Models.Reponse", b =>
                {
                    b.Property<int>("Id_Reponse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Reponse"));

                    b.Property<bool>("EstCorrect")
                        .HasColumnType("boolean");

                    b.Property<int>("Id_Question")
                        .HasColumnType("integer");

                    b.Property<int>("QuestionId_Question")
                        .HasColumnType("integer");

                    b.Property<string>("TextReponse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Reponse");

                    b.HasIndex("QuestionId_Question");

                    b.ToTable("Reponses");
                });

            modelBuilder.Entity("Rditil.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id_Utilisateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Utilisateur"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Utilisateur");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("Rditil.Models.Examen", b =>
                {
                    b.HasOne("Rditil.Models.Utilisateur", "Utilisateur")
                        .WithMany("Examens")
                        .HasForeignKey("UtilisateurId_Utilisateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Rditil.Models.Examen_Question", b =>
                {
                    b.HasOne("Rditil.Models.Examen", null)
                        .WithMany("Examen_Questions")
                        .HasForeignKey("ExamenId_Examen");

                    b.HasOne("Rditil.Models.Examen", "Examen")
                        .WithMany("ExamenQuestions")
                        .HasForeignKey("Id_Examen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rditil.Models.Question", "Question")
                        .WithMany("ExamenQuestions")
                        .HasForeignKey("Id_Question")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Examen");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Rditil.Models.Reponse", b =>
                {
                    b.HasOne("Rditil.Models.Question", "Question")
                        .WithMany("Reponses")
                        .HasForeignKey("QuestionId_Question")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Rditil.Models.Examen", b =>
                {
                    b.Navigation("ExamenQuestions");

                    b.Navigation("Examen_Questions");
                });

            modelBuilder.Entity("Rditil.Models.Question", b =>
                {
                    b.Navigation("ExamenQuestions");

                    b.Navigation("Reponses");
                });

            modelBuilder.Entity("Rditil.Models.Utilisateur", b =>
                {
                    b.Navigation("Examens");
                });
#pragma warning restore 612, 618
        }
    }
}
