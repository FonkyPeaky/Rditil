// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rditil.Data;

#nullable disable

namespace Rditil.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250723094113_InitSchema")]
    partial class InitSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Rditil.Models.Examen", b =>
                {
                    b.Property<int>("Id_Examen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateExamen")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("DureeExamen")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id_Utilisateur")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SCORE")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UtilisateurId_Utilisateur")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id_Examen");

                    b.HasIndex("UtilisateurId_Utilisateur");

                    b.ToTable("Examens");
                });

            modelBuilder.Entity("Rditil.Models.Examen_Question", b =>
                {
                    b.Property<int>("Id_Examen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_Question")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ExamenId_Examen")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id_Examen", "Id_Question");

                    b.HasIndex("ExamenId_Examen");

                    b.HasIndex("Id_Question");

                    b.ToTable("ExamenQuestions");
                });

            modelBuilder.Entity("Rditil.Models.Question", b =>
                {
                    b.Property<int>("Id_Question")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Enonce")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id_Question");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Rditil.Models.Reponse", b =>
                {
                    b.Property<int>("Id_Reponse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_Question")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuestionId_Question")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TextReponse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id_Reponse");

                    b.HasIndex("QuestionId_Question");

                    b.ToTable("Reponses");
                });

            modelBuilder.Entity("Rditil.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id_Utilisateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id_Utilisateur");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("Rditil.Models.Examen", b =>
                {
                    b.HasOne("Rditil.Models.Utilisateur", "Utilisateur")
                        .WithMany("Examens")
                        .HasForeignKey("UtilisateurId_Utilisateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Rditil.Models.Examen_Question", b =>
                {
                    b.HasOne("Rditil.Models.Examen", null)
                        .WithMany("Examen_Questions")
                        .HasForeignKey("ExamenId_Examen");

                    b.HasOne("Rditil.Models.Examen", "Examen")
                        .WithMany("ExamenQuestions")
                        .HasForeignKey("Id_Examen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rditil.Models.Question", "Question")
                        .WithMany("ExamenQuestions")
                        .HasForeignKey("Id_Question")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Examen");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Rditil.Models.Reponse", b =>
                {
                    b.HasOne("Rditil.Models.Question", "Question")
                        .WithMany("Reponses")
                        .HasForeignKey("QuestionId_Question")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Rditil.Models.Examen", b =>
                {
                    b.Navigation("ExamenQuestions");

                    b.Navigation("Examen_Questions");
                });

            modelBuilder.Entity("Rditil.Models.Question", b =>
                {
                    b.Navigation("ExamenQuestions");

                    b.Navigation("Reponses");
                });

            modelBuilder.Entity("Rditil.Models.Utilisateur", b =>
                {
                    b.Navigation("Examens");
                });
#pragma warning restore 612, 618
        }
    }
}
