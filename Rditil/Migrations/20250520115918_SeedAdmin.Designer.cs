// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rditil.Data;

#nullable disable

namespace Rditil.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250520115918_SeedAdmin")]
    partial class SeedAdmin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Rditil.Models.Examen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateExamen")
                        .HasColumnType("TEXT");

                    b.Property<int>("DureeExamen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Examens");
                });

            modelBuilder.Entity("Rditil.Models.ExamenQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExamenId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReponseChoisieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExamenId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ReponseChoisieId");

                    b.ToTable("ExamenQuestions");
                });

            modelBuilder.Entity("Rditil.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Enonce")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Rditil.Models.Reponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TextReponse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Reponses");
                });

            modelBuilder.Entity("Rditil.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Utilisateurs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@examen.com",
                            IsAdmin = true,
                            Nom = "Admin",
                            Password = "pipicaca",
                            Prenom = "Super"
                        });
                });

            modelBuilder.Entity("Rditil.Models.Examen", b =>
                {
                    b.HasOne("Rditil.Models.Utilisateur", "Utilisateur")
                        .WithMany("Examens")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Rditil.Models.ExamenQuestion", b =>
                {
                    b.HasOne("Rditil.Models.Examen", "Examen")
                        .WithMany("ExamenQuestions")
                        .HasForeignKey("ExamenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rditil.Models.Question", "Question")
                        .WithMany("ExamenQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rditil.Models.Reponse", "ReponseChoisie")
                        .WithMany()
                        .HasForeignKey("ReponseChoisieId");

                    b.Navigation("Examen");

                    b.Navigation("Question");

                    b.Navigation("ReponseChoisie");
                });

            modelBuilder.Entity("Rditil.Models.Reponse", b =>
                {
                    b.HasOne("Rditil.Models.Question", "Question")
                        .WithMany("Reponses")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Rditil.Models.Examen", b =>
                {
                    b.Navigation("ExamenQuestions");
                });

            modelBuilder.Entity("Rditil.Models.Question", b =>
                {
                    b.Navigation("ExamenQuestions");

                    b.Navigation("Reponses");
                });

            modelBuilder.Entity("Rditil.Models.Utilisateur", b =>
                {
                    b.Navigation("Examens");
                });
#pragma warning restore 612, 618
        }
    }
}
